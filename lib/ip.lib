#!/usr/bin/env bash
#
# MODULE FOR THE ip CLASS
local moduleName=$(echo "$_" | awk -F"=" '{print $NF}');

# define our ip class
class ip
	func valid
	func lookup
	func request

ip::valid () {
	# Takes 1 argument, ip, to validate
	# stats true or false
    local ip=$1
    local stat='false';
	local regex_string_ipv4='^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$';
	# credit for the following ipv6 regex goes to http://www.violato.net/blog/others/40-ipv6-regex-validation
	local regex_string_ipv6='^\s*((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}(:|((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})|(:[0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){5}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){0,1}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){0,2}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){0,3}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){0,4}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(:(:[0-9A-Fa-f]{1,4}){0,5}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})))(%.+)?\s*$';
    if [[ "$ip" =~ ${regex_string_ipv4} ]]; then # validateds IP version 4
	    OIFS=$IFS;
        IFS='.';
        ip=($ip);
        IFS=$OIFS;
        [[ ${ip[0]} -le 256 && ${ip[0]} -gt 0 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
		if [ "$?" == "0" ]; then
			stat='ipv4';
		fi
	elif [[ "$ip" =~ ${regex_string_ipv6} ]]; then # validates IP version 6
		stat='ipv6';
    fi
    echo "$stat"
}

ip::lookup () {
    local HostName="$1";
    local ip=
    local request="$2";
    if [ "$(nslookup ${HostName} | grep "** server can\'t find ${HostName}" > /dev/null 2>&1;echo $?)" != "0" ]; then
       ip=$(nslookup ${HostName} | grep -i 'address' | tail -1 | awk '{print $2}');
    else
        if [ "$request" != "0" ];then
            ip=$(requestip 0);
        fi
    fi
    echo "$ip";

}

load ip $moduleName
